<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="" name="common-build">
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
	
	<dirname property="project.ant-includes.basedir" file="${ant.file.common-build}" />
	
	<!-- Common definitions for all the ant extensions / tasks -->
	<dirname property="project.ant-includes.basedir.parent" file="${project.ant-includes.basedir}"/>
	<property name="project.ant-libs.basedir" location="${project.ant-includes.basedir.parent}/ant-libs"/>
	
	<macrodef name="get-and-checksum">
		<attribute name="url"/>
		<attribute name="dest"/>
		<attribute name="fetch-checksum" default="true"/>
		<attribute name="checksum-extension" default="sha1"/>
		<attribute name="checksum-algorithm" default="sha"/>
		<sequential>
			<local name="destdir"/>
			<local name="destfile"/>
			<dirname property="destdir" file="@{dest}"/>
			<basename property="destfile" file="@{dest}"/>
			<get dest="${destdir}" usetimestamp="true" skipexisting="true">
				<url url="@{url}"/>
				<firstmatchmapper>
					<globmapper from="@{url}" to="${destfile}"/>
				</firstmatchmapper>
			</get>
			<if>
				<equals arg1="@{fetch-checksum}" arg2="true" />
				<then>
					<get dest="${destdir}" usetimestamp="true" skipexisting="true">
						<url url="@{url}.@{checksum-extension}"/>
						<firstmatchmapper>
							<globmapper from="@{url}.sha1" to="${destfile}.@{checksum-extension}"/>
						</firstmatchmapper>
					</get>
				</then>
				<elseif>
					<!-- Let's generate checksum -->
					<not>
						<uptodate srcfile="@{dest}" targetfile="@{dest}.@{checksum-extension}" />
					</not>
					<then>
						<checksum file="@{dest}" algorithm="@{checksum-algorithm}" fileext=".@{checksum-extension}" forceOverwrite="yes"/>
					</then>
				</elseif>
			</if>
			
			<local name="checksum.matches"/>
			<local name="checksum.matches.fail"/>
			<checksum file="@{dest}" algorithm="@{checksum-algorithm}" fileext=".@{checksum-extension}" verifyproperty="checksum.matches"/>
			<condition property="checksum.matches.fail">
				<equals arg1="${checksum.matches}" arg2="false"/>
			</condition>
			<fail if="checksum.matches.fail">Checksum error</fail>
		</sequential>
	</macrodef>
</project>
